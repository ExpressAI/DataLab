"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[138],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return u}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),l=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=l(a),u=r,h=m["".concat(c,".").concat(u)]||m[u]||d[u]||s;return a?n.createElement(h,i(i({ref:t},p),{},{components:a})):n.createElement(h,i({ref:t},p))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,i=new Array(s);i[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var l=2;l<s;l++)i[l]=a[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5236:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return m}});var n=a(7462),r=a(3366),s=(a(7294),a(3905)),i=["components"],o={},c="How to add a new task schema for your dataset?",l={unversionedId:"SDK/add_new_task_schema",id:"SDK/add_new_task_schema",title:"How to add a new task schema for your dataset?",description:"This will happen when you aim to add a new dataset whose task schema has NOT been supported by existing tasks schemas. In this case, you need to mannually add a new task schema.",source:"@site/docs/SDK/add_new_task_schema.md",sourceDirName:"SDK",slug:"/SDK/add_new_task_schema",permalink:"/DataLab/docs/SDK/add_new_task_schema",editUrl:"https://github.com/ExpressAI/DataLab/tree/main/docs/SDK/add_new_task_schema.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Add New Datasets into the DataLab Web Platform",permalink:"/DataLab/docs/SDK/add_new_datasets_into_web_platform"},next:{title:"How to name a feature:",permalink:"/DataLab/docs/SDK/how_to_name_a_feature"}},p=[{value:"Example",id:"example",children:[{value:"1. creat a script for the class",id:"1-creat-a-script-for-the-class",children:[],level:5},{value:"2. claim the new class in <code>__init__.py</code>",id:"2-claim-the-new-class-in-__init__py",children:[],level:5}],level:3},{value:"Tips",id:"tips",children:[],level:3}],d={toc:p};function m(e){var t=e.components,a=(0,r.Z)(e,i);return(0,s.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"how-to-add-a-new-task-schema-for-your-dataset"},"How to add a new task schema for your dataset?"),(0,s.kt)("p",null,"This will happen when you aim to add a new dataset whose task schema has NOT been supported by existing tasks schemas. In this case, you need to mannually add a new task schema.\nHere are existing supported ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/ExpressAI/DataLab/tree/main/src/datalabs/tasks"},"task schema")),(0,s.kt)("p",null,"(Check out this doc to know ",(0,s.kt)("a",{parentName:"p",href:"/DataLab/docs/SDK/what_is_task_schema"},"what is the task schema"),")"),(0,s.kt)("h3",{id:"example"},"Example"),(0,s.kt)("p",null,"Suppose that we want to add the ",(0,s.kt)("inlineCode",{parentName:"p"},"sequence-labeling")," as a new task schema, which requires three steps:"),(0,s.kt)("h5",{id:"1-creat-a-script-for-the-class"},"1. creat a script for the class"),(0,s.kt)("p",null,"We need to creat a script (",(0,s.kt)("inlineCode",{parentName:"p"},"sequence_labeling.py"),") in the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/ExpressAI/DataLab/tree/main/src/datalabs/tasks"},"folder")," to claim the class ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/ExpressAI/DataLab/blob/main/src/datalabs/tasks/sequence_labeling.py"},(0,s.kt)("inlineCode",{parentName:"a"},"SequenceLabeling")),"."),(0,s.kt)("h5",{id:"2-claim-the-new-class-in-__init__py"},"2. claim the new class in ",(0,s.kt)("inlineCode",{parentName:"h5"},"__init__.py")),(0,s.kt)("p",null,"We then need to register the information of new class at ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/ExpressAI/DataLab/blob/main/src/datalabs/tasks/__init__.py"},(0,s.kt)("inlineCode",{parentName:"a"},"__init__.py"))),(0,s.kt)("h3",{id:"tips"},"Tips"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"The motivation of introducing task schema is to help us easily standardize (normalize) different datasets from the same task category.\nFor example, the samples from both ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/ExpressAI/DataLab/blob/main/datasets/ag_news/ag_news.py"},(0,s.kt)("inlineCode",{parentName:"a"},"ag_news"))," (topic classification) and ",(0,s.kt)("inlineCode",{parentName:"li"},"sst2")," (sentiment classification) should be ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/ExpressAI/DataLab/blob/da463705e983b771131c74ee5cef222d6d59d56e/src/datalabs/tasks/text_classification.py#L29"},"formatted as ",(0,s.kt)("inlineCode",{parentName:"a"},"text")," and ",(0,s.kt)("inlineCode",{parentName:"a"},"label")),". The advantage of doing this is we can easily process all datasets within this task category in a unified way (without any additional preprocessing)."),(0,s.kt)("li",{parentName:"ul"},"Once we introduce a new task schema, we can first refer to the schema of similar tasks and incrementally extend it. (",(0,s.kt)("inlineCode",{parentName:"li"},"incrementally")," kinda means partially ",(0,s.kt)("inlineCode",{parentName:"li"},"inherit")," the similar task schema.)\nFor example, "),(0,s.kt)("li",{parentName:"ul"},"you can refer to ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/ExpressAI/DataLab/blob/604656cdce05d539e94949f0c842fbbb5b368188/src/datalabs/tasks/question_answering.py#L9"},"QuestionAnsweringExtractive")," if you aim to introduce other QA-based tasks."),(0,s.kt)("li",{parentName:"ul"},"you can refer to ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/ExpressAI/DataLab/blob/604656cdce05d539e94949f0c842fbbb5b368188/src/datalabs/tasks/summarization.py#L22"},"Summarization")," if other new generation tasks are being added.")))}m.isMDXComponent=!0}}]);