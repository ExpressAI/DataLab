"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[897],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=c(r),f=a,m=d["".concat(p,".").concat(f)]||d[f]||u[f]||o;return r?n.createElement(m,s(s({ref:t},l),{},{components:r})):n.createElement(m,s({ref:t},l))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1403:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return l},default:function(){return d}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),s=["components"],i={},p="How to Preprocess you Data?",c={unversionedId:"SDK/how_to_preprocess_your_data",id:"SDK/how_to_preprocess_your_data",title:"How to Preprocess you Data?",description:"Data preprocessing (e.g., tokenization) is an indispensable step in training deep  learning and machine learning models,",source:"@site/docs/SDK/how_to_preprocess_your_data.md",sourceDirName:"SDK",slug:"/SDK/how_to_preprocess_your_data",permalink:"/DataLab/docs/SDK/how_to_preprocess_your_data",editUrl:"https://github.com/ExpressAI/DataLab/tree/main/docs/SDK/how_to_preprocess_your_data.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"How to name a feature:",permalink:"/DataLab/docs/SDK/how_to_name_a_feature"},next:{title:"How to Save Processed Datasets?",permalink:"/DataLab/docs/SDK/how_to_save_processed_dataset"}},l=[{value:"Interface",id:"interface",children:[],level:2},{value:"Supported Operations",id:"supported-operations",children:[],level:2},{value:"Define your own Operations",id:"define-your-own-operations",children:[],level:2}],u={toc:l};function d(e){var t=e.components,r=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to-preprocess-you-data"},"How to Preprocess you Data?"),(0,o.kt)("p",null,"Data preprocessing (e.g., tokenization) is an indispensable step in training deep  learning and machine learning models,\nand the quality of the dataset directly affects the learning of models. Currently, DataLab supports both general preprocessing functions\nand task-specific ones, which are built based on different sources, such as Spacy, NLTK and Huggingface. "),(0,o.kt)("h2",{id:"interface"},"Interface"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from datalabs import load_dataset\nfrom preprocess import *\n\n\n# realtime mode\ndataset = load_dataset("ag_news")\nres=dataset["test"].apply(lower, mode = "realtime") # res:Iterator\nprint(next(res))\n\n# memory mode\nres=dataset["test"].apply(lower, mode="memory") # res:Dataset\nprint(res)\n\n\n# local mode\nres=dataset["test"].apply(lower, mode="local") # res:Dataset\nprint(res)\n')),(0,o.kt)("h2",{id:"supported-operations"},"Supported Operations"),(0,o.kt)("p",null,"You can find more operations supported by DataLab SDK ",(0,o.kt)("a",{parentName:"p",href:"http://datalab.nlpedia.ai/operations"},"here")),(0,o.kt)("h2",{id:"define-your-own-operations"},"Define your own Operations"),(0,o.kt)("p",null,"You can define the operation by yourself"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from datalabs import load_dataset\n\n@datalabs.preprocessing\ndef lower(text):\n    return text.lower()\n    \ndataset = load_dataset("ag_news")\nres=dataset["test"].apply(lower, mode = "realtime") # res:Iterator    \n    \n')))}d.isMDXComponent=!0}}]);